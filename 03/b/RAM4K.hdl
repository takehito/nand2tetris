// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
		DMux8Way(in=load, sel=address[0..2], a=muxa, b=muxb, c=muxc, d=muxd, e=muxe, f=muxf, g=muxg, h=muxh);

		RAM512(in=in, address=address[3..11], load=muxa, out=rama);
		RAM512(in=in, address=address[3..11], load=muxb, out=ramb);
		RAM512(in=in, address=address[3..11], load=muxc, out=ramc);
		RAM512(in=in, address=address[3..11], load=muxd, out=ramd);
		RAM512(in=in, address=address[3..11], load=muxe, out=rame);
		RAM512(in=in, address=address[3..11], load=muxf, out=ramf);
		RAM512(in=in, address=address[3..11], load=muxg, out=ramg);
		RAM512(in=in, address=address[3..11], load=muxh, out=ramh);

		Mux8Way16(
			a=rama,
			b=ramb,
			c=ramc,
			d=ramd,
			e=rame,
			f=ramf,
			g=ramg,
			h=ramh,
			sel=address[0..2],
			out=out
	);
}
